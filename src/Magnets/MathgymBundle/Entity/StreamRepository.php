<?php

/*
 *  This file is part of Mathstreams.
 *
 *  Copyright (c) 2015  Sohani Academy <developer@sohaniacademy.com>
 *
 *  Mathstreams is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as
 *  published by the Free Software Foundation, either version 3 of the
 *  License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Affero General Public License for more details.
 *
 *  You should have received a copy of the GNU Affero General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

namespace Magnets\MathgymBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * StreamRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StreamRepository extends EntityRepository
{

    public function persist($stream)
    {
        $this->_em->persist($stream);
    }

    public function remove($stream)
    {
        $this->_em->remove($stream);
    }

    public function addStream($name)
    {
        $stream = new Stream($name);
        $this->persist($stream);
        return $stream;
    }

    public function getStreamsByCat()
    {
        $cats = ['std', 'topic', 'diff', 'other'];
        $streamCats = [];
        foreach ($cats as $cat) {
            $streamCats[$cat] = [];
        }

        $streams = $this->findAll();
        foreach ($streams as $stream) {
            foreach ($cats as $cat) {
                if ($stream->getStype() == $cat || $cat == 'other') { //last resort: other
                    $streamCats[$cat][] = ['id' => $stream->getId(), 'name' => $stream->getName(), 'cat' => $cat];
                    break;
                }
            }
        }
        return $streamCats;
    }

//    public function getAllNameIds()
//    {
//        return $this->_em->createQueryBuilder()->select('s.id, s.name')->from('MagnetsMathgymBundle:Stream', 's', 's.id')->getQuery()->getResult();
//    }
}
